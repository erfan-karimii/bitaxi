services:
  db:
    image: docker.arvancloud.ir/postgres:14.1
    container_name: db_api
    ports:
      - 5432:5432
    env_file:
      - db.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d db"]
      interval: 5s
      timeout: 5s
      retries: 5

    volumes:
      - postgres-volume:/var/lib/postgresql/data


  django:
    build:
      context: .
      dockerfile: docker/stage.Dockerfile
    deploy:
      mode: replicated
      replicas: 2
    entrypoint: /entrypoint.sh
    env_file:
      - db.env
    volumes:
      - ./core/:/app
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    expose:
      - "8000"

  celery:
    build:
      context: .
      dockerfile: docker/stage.Dockerfile
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core/:/app
    depends_on:
      - redis
    restart: on-failure


  redis:
    image: docker.arvancloud.ir/redis
    container_name: redis-celery
    volumes:
      - redis-volume:/data
    
  nginx:
    image: docker.arvancloud.ir/nginx:1.25.3-alpine
    container_name: bitaxi-nginx
    restart: always
    ports: 
      - "9000:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - django


volumes:
  postgres-volume:
  redis-volume: